{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.3.0.0",
        "fileVersion": "4.3.0-3.22415.1 (8301d484)",
        "semanticVersion": "4.3.0",
        "language": "es-ES"
      },
      "results": [
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Posible argumento de referencia nulo para el par√°metro \"dbConnection\" en \"TicketRepository.TicketRepository(TicketsContext context, IDbConnection dbConnection)\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/UnitOfWork/UnitOfWork.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 75,
                  "endLine": 28,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/UnitOfWork/IUnitOfWork.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 20,
                  "endLine": 18,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2953",
          "level": "warning",
          "message": "Either implement 'IDisposable.Dispose', or totally rename this method to prevent confusion.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/UnitOfWork/IUnitOfWork.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 17,
                  "endLine": 20,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/UnitOfWork/UnitOfWork.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 13,
                  "endLine": 77,
                  "endColumn": 15
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/UnitOfWork/UnitOfWork.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 9,
                  "endLine": 75,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'entityToUpdate' to 'entity' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/Base/GenericRepository.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 40,
                  "endLine": 26,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'id' to 'entity' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/Base/GenericRepository.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 50,
                  "endLine": 32,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'entityToDelete' to 'entity' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/Base/GenericRepository.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 40,
                  "endLine": 38,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this expression which always evaluates to 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/Base/GenericRepository.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 59,
                  "endLine": 76,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1006",
          "level": "warning",
          "message": "Remove the default parameter value to match the signature of overridden method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/Repositories/TicketDetailRepository.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 45,
                  "endLine": 19,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Persistence/Repositories/TicketDetailRepository.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 23,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1806",
          "level": "note",
          "message": "AttachUserToContext calls TryParse but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/WINDOWS/RiderProjects/TicketsAPI/Infrastructure/Security/Jwt/JwtMiddleware.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1806": {
          "id": "CA1806",
          "shortDescription": "Do not ignore method results",
          "fullDescription": "A new object is created but never used; or a method that creates and returns a new string is called and the new string is never used; or a COM or P/Invoke method returns an HRESULT or error code that is never used.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1806",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Posible argumento de referencia nulo",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1006": {
          "id": "S1006",
          "shortDescription": "Method overrides should not change parameter defaults",
          "fullDescription": "Default arguments are determined by the static type of the object. If a default argument is different for a parameter in an overriding method, the value used in the call will be different when calls are made via the base or derived object, which may be contrary to developer expectations.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1006",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code‚Äôs readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1199": {
          "id": "S1199",
          "shortDescription": "Nested code blocks should not be used",
          "fullDescription": "Nested code blocks can be used to create a new scope and restrict the visibility of the variables defined inside it. Using this feature in a method typically indicates that the method has too many responsibilities, and should be refactored into smaller methods.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1199",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2589": {
          "id": "S2589",
          "shortDescription": "Boolean expressions should not be gratuitous",
          "fullDescription": "If a boolean expression doesn‚Äôt change the evaluation of the condition, then it is entirely unnecessary, and can be removed. If it is gratuitous because it does not match the programmer‚Äôs intent, then it‚Äôs a bug and the expression should be fixed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2589",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2953": {
          "id": "S2953",
          "shortDescription": "Methods named \"Dispose\" should implement \"IDisposable.Dispose\"",
          "fullDescription": "Dispose as a method name should be used exclusively to implement IDisposable.Dispose to prevent any confusion.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2953",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}